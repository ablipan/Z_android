package com.pp.utils;import java.io.UnsupportedEncodingException;import java.net.URLEncoder;import java.util.regex.Matcher;import java.util.regex.Pattern;/** * 字符串工具类 */public class StringB {        //是否为空    public static boolean isBlank(String str) {        if (str == null || "".equals(str)) {            return true;        }        return false;    }        /**     * 屏蔽表达式之外的字符     * @param str     * @return     */    public static String stringFilter(String exp , String str)    {        Pattern p = Pattern.compile(exp);        Matcher m = p.matcher(str);        return m.replaceAll("");    }        /** 返回字符串的字节长度 */    public static int length(String strExp) {        return strExp.getBytes().length;    }    /**     * 此函数判断字符串是否为NULL，如果为空返回"",否则返回原值     *      * @param sourceStr     * @return     */    public static String NulltoBlank(String sourceStr) {        if (sourceStr == null) {            return "";        } else {            return sourceStr.trim();        }    }        /**     * 此函数判断字符串是否为NULL，如果为空返回defValue,否则返回原值     *      * @param sourceStr     * @param defValue     * @return     */    public static String NulltoDef(String sourceStr ,  String defValue) {        if (sourceStr == null || "".equals((sourceStr=sourceStr.trim()))) {            return defValue;        } else {            return sourceStr;        }    }        /**     * url Encode     * @param data     * @return     */    public static String encodeParam(String data)    {        try        {            return URLEncoder.encode(data, C.CHARSET_UTF8);        } catch (UnsupportedEncodingException e)        {            e.printStackTrace();        }        return data;    }            /**     * 使用char数组获得字符串     * @param strChar     * @return     */    public static String getStr(char[] strChar)    {        return new String(strChar);    }        /**     * 获得字符指定长度的字符串     * @param strChar     * @param len     * @return     */    public static String getStr(char strChar , int len)    {        char[] temp = new char[len];        for(int i=0; i<temp.length; i++)        {            temp[i] = strChar;        }        return new String(temp);    }        /**     * 根据字符串字节长度     * @param content 内容     * @param format 表达式     */    private static int getStrLen(String str , String format)    {        if(StringB.isBlank(str))        {            return 0;        }                if(StringB.isBlank(format))        {            return str.getBytes().length;                    }        return String.format(format, str).getBytes().length;    }        public static void main(String[] args) {        // System.out.println("date=" + replaceFirst("2002/12/12", "/", "w"));    }}